server {
# SET THE SITE UP FOR SSL
        listen 443 ssl spdy default_server;
        server_name SERVER_NAME;

        # SSL setup
        ssl                 on;
        ssl_certificate     /etc/nginx/ssl/CERT;
        ssl_certificate_key /etc/nginx/ssl/KEY;
        ssl_dhparam         /etc/nginx/ssl/dhparam.pem;
        ssl_session_timeout 5m;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;

        # strong
        ssl_ciphers 'AES256+EECDH:AES256+EDH:!aNULL';
        ssl_prefer_server_ciphers on;
        ssl_session_cache         shared:SSL:50m;

        # Enable HSTS ( see http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security )
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
        add_header X-Frame-Options SAMEORIGIN;

        # OCSP Stapling
        ssl_stapling            on;
        ssl_stapling_verify     on;
        ssl_trusted_certificate /etc/nginx/ssl/ca-bundle.pem;

        root ROOT/owncloud;
        index index.php;
        error_page 403 /core/templates/403.php;
        error_page 404 /core/templates/404.php;

        # set max upload size
        client_max_body_size 1G;
        fastcgi_buffers 64 4K;        

        rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
        rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
        rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;        

        location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
          }    

        location ~ ^/(?:\.htaccess|data|config|db_structure\.xml|README) {
          deny all;
          }

        location / {
            # The following 2 rules are only needed with webfinger
            rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
            rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

            rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
            rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

            rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

            try_files $uri $uri/ /index.php;            
        }          

        location ~ [^/].php(/|$) {
                fastcgi_split_path_info ^(.+?.php)(/.*)$;
                if (!-f $document_root$fastcgi_script_name) {
                   return 404;
                }
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                fastcgi_index index.php;
                include fastcgi_params;
        }
}